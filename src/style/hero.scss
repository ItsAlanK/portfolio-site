@use 'style';

.hero {
    margin-top: 120px;
    margin-bottom: 4rem;
  }

.hero {
    h1 {
        font-family: style.$display-font;
        font-size: 3rem;
        letter-spacing: 10px;
        line-height: 1;
        margin-bottom: 1rem;
        display: block;
    }

    .tagline {
        height: 6.5rem;
    }

    p {
        font-family: style.$display-font;
        color: style.$dark-purple;
        font-size: 1.5rem;
        letter-spacing: 4px;
        line-height: 1.5em;
        width: 96%;
    }

    button {
        color: style.$bg-color;
        background-color: style.$dark-purple;
        font-weight: 700;
        font-size: 2rem;
        margin-top: 2.5rem;
        padding: 0 0.75rem;
        letter-spacing: 0.8px;
        display: flex;
        align-items: center;
        border: none;
        border-radius: 1rem;
        transition: 0.3s ease-in-out;
    }

    button:hover {
        box-shadow: 2px 2px 3px style.$orange;
        transition: 0.3s ease-in-out;
    }

    button svg {
        font-size: 2rem;
        margin-left: 10px;
        transition: 0.3s ease-in-out;
        line-height: 1;
    }

    button:hover svg {
        transform: translateX(5px) translateY(-5px) rotate(22deg) scale(60%);
        margin-left: 2rem;
    }

    img {
        max-width: 80%;
        border-radius: 100%;
        background-color: style.$bg-color;
        border: 0.75rem solid style.$teal;
        //animation: 3s ease-in-out infinite updown;
    }

    .flex {
        justify-content: center;
        align-items: center;
        margin-top: 2rem;
    }

    .flex::after {
        content: "";
        background-color: style.$teal;
        position: absolute;
        width: .6rem;
        height: 35vw;
        z-index: -1;
        animation: 6s ease-in-out infinite rotate;
    }
}

/*
Up/down action for image, floating effect
@keyframes updown {
    0% {
        transform: translateY(-5px);
    }
    50% {
        transform: translateY(5px);
    }
    100% {
        transform: translateY(-5px);
    }
}
*/

@keyframes rotate {
    0% {
        transform: rotate(90deg);
    }
    25% {
        transform: rotate(85deg);
    }
    50% {
        transform: rotate(180deg);
    }
    75% {
        transform: rotate(-85deg);
    }
    100% {
        transform: rotate(90deg);
    }
}

.txt-rotate > .wrap {
    border-right: 0.08em solid style.$orange;
}

// Query set to that size to allow for overflow on typing affect. Lazy solution.
@media (max-width: 991px) {
    .hero {
        .tagline {
            height: auto;
        }
        
        img {
            max-width: 100%;
            border: 0.6rem solid style.$teal;
        }

        .flex::after {
            display: none;
        }
    }
}

@media (min-width: 1520px) {
    .hero .flex::after {
        height: 30vw;
    }
}